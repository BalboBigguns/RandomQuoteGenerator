{"version":3,"sources":["App.js","index.js"],"names":["library","add","fab","QuoteBox","props","state","quote","author","fetchQuote","bind","this","fetch","then","res","json","body","setState","console","log","catch","err","shareContent","encodeURIComponent","twitterLink","className","id","title","href","target","icon","onClick","React","Component","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"2RAMAA,IAAQC,IAAIC,K,IA0DGC,E,kDAvDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,MAAO,GACPC,OAAQ,IAGZ,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBARH,E,gEAYfC,KAAKF,e,mCAGK,IAAD,OACTG,MAAM,4EAA6E,CAC/E,OAAU,MACV,QAAW,CACP,eAAgB,mBAChB,kBAAmB,gDACnB,iBAAkB,wDAGzBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,EAAKC,SAAS,CACVV,MAAOS,EAAK,GAAGT,MACfC,OAAQQ,EAAK,GAAGR,SAGpBU,QAAQC,IAAIH,EAAK,OAEpBI,OAAM,SAAAC,GACHH,QAAQC,IAAIE,Q,+BAKhB,IAAMC,EAAeC,mBAAmB,IAAD,OAAKZ,KAAKL,MAAMC,MAAhB,aAA0BI,KAAKL,MAAME,OAArC,aACjCgB,EAAW,gDAA4CF,GAE7D,OACI,yBAAKG,UAAU,WAAWC,GAAG,aACzB,yBAAKA,GAAG,QAAR,IAAiBf,KAAKL,MAAMC,OAC5B,yBAAKmB,GAAG,UAAR,MAAqBf,KAAKL,MAAME,QAChC,yBAAKiB,UAAU,WACX,uBAAGE,MAAM,oBAAoBC,KAAMJ,EAAaK,OAAO,QAAQH,GAAG,eAAc,kBAAC,IAAD,CAAiBI,KAAM,CAAC,MAAO,qBAC/G,4BAAQJ,GAAG,YAAYK,QAASpB,KAAKF,YAArC,mB,GAjDGuB,IAAMC,WCH7BC,IAASC,OACL,yBAAKT,GAAG,WACJ,kBAAC,IAAMU,WAAP,KACI,kBAACC,EAAD,QAGVC,SAASC,eAAe,U","file":"static/js/main.2f19afd0.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport './index.css';\n\nlibrary.add(fab);\n\nclass QuoteBox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            quote: '',\n            author: ''\n        }\n\n        this.fetchQuote = this.fetchQuote.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchQuote();\n    }\n\n    fetchQuote() {\n        fetch(\"https://andruxnet-random-famous-quotes.p.rapidapi.com/?cat=famous&count=1\", {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"Content-Type\": \"application/json\",\n                \"x-rapidapi-host\": \"andruxnet-random-famous-quotes.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"ae2b4d05a6mshbdca3299f032ae0p1a348ajsn99b5b7a63f43\"\n            }\n        })\n        .then(res => res.json())\n        .then(body => {\n            this.setState({\n                quote: body[0].quote,\n                author: body[0].author\n            });\n\n            console.log(body[0]);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    render() {\n        const shareContent = encodeURIComponent(`\"${this.state.quote}\" ${this.state.author} #quotes`);\n        const twitterLink = `https://twitter.com/intent/tweet?text=${shareContent}`;\n\n        return (\n            <div className=\"QuoteBox\" id=\"quote-box\">\n                <div id=\"text\"> {this.state.quote}</div>\n                <div id=\"author\"> - {this.state.author}</div>\n                <div className=\"buttons\">\n                    <a title=\"Tweet this quote!\" href={twitterLink} target=\"blank\" id=\"tweet-quote\"><FontAwesomeIcon icon={['fab', 'twitter-square']}/></a>\n                    <button id=\"new-quote\" onClick={this.fetchQuote}>New quote</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuoteBox;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <div id=\"wrapper\">\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </div>,\n  document.getElementById('root')\n);"],"sourceRoot":""}